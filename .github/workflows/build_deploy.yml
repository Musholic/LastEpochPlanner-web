name: build

on:
  push:
    branches: ["main"]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION_FILE: "version.json"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
          path: |
            ~/.npm

      - uses: jdx/mise-action@v2

      - name: "Build"
        run: mise run web:build

      - name: Get latest release
        id: get_release
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const fs = require('fs');

            const versions = JSON.parse(fs.readFileSync(process.env.VERSION_FILE, 'utf8'));
            return versions["le"].head;

      - name: "Pack last version"
        env:
          LATEST_TAG: ${{ steps.get_release.outputs.result }}
        run: npm run pack -w packages/packer $LATEST_TAG le clone
        
      - name: "Pack beta version"
        run: npm run pack -w packages/packer beta le clone

      - name: "Assemble"
        env:
          LATEST_TAG: ${{ steps.get_release.outputs.result }}
        run: |
          cp -r packages/web/build/client dist
          cp packages/packer/r2/games dist/ -r
          # Copy the latest CHANGELOG.md
          cp packages/packer/build/le/beta/repo/CHANGELOG.md dist/CHANGELOG.md
          cp version.json dist/
          # SPA trick
          cp dist/index.html dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "dist"
  deploy:
    # Add a dependency to the build job
    needs: build
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: "pages"
      cancel-in-progress: false

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
